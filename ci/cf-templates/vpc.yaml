---
AWSTemplateFormatVersion: '2010-09-09'


Parameters:
  VpcCidr:
    Type: String
    Default: 172.16.0.0/16
  SubnetCidr:
    Type: String
    Default: 172.16.0.0/24


Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: false
      InstanceTenancy: default

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  RoutePublic:
    DependsOn: [ "InternetGateway" ]
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetPublic:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Sub "${SubnetCidr}"
      AvailabilityZone: eu-central-1a

  RouteTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetPublic
      RouteTableId: !Ref RouteTablePublic

Outputs:
  VpcId:
    Value: !Ref VPC
    Export:
      Name: !Sub "${AWS::StackName}-VpcId"
  VpcCidr:
    Value: !Ref VpcCidr
    Export:
      Name: !Sub "${AWS::StackName}-VpcCidr"
  RouteTablePublicId:
    Value: !Ref RouteTablePublic
    Export:
      Name: !Sub "${AWS::StackName}-RouteTablePublicId"
  SubnetPublicId:
    Value: !Ref SubnetPublic
    Export:
      Name: !Sub "${AWS::StackName}-SubnetPublicId"
